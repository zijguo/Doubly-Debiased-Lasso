source("~/Documents/GitHub/dtr/temp6.R")
DDL()
devtools::check()
setwd("~/")
setwd("~/Documents/GitHub/DDL")
devtools::check()
devtools::build()
library(DDL)
n=500
p=2000
s=5
q=3
sigmaE=2
sigma=2
pert=1
H = pert*matrix(rnorm(n*q,mean=0,sd=1),n,q,byrow = TRUE)
Gamma = matrix(rnorm(q*p,mean=0,sd=1),q,p,byrow = TRUE)
#value of X independent from H
E = matrix(rnorm(n*p,mean=0,sd=sigmaE),n,p,byrow = TRUE)
#defined in eq. (2), high-dimensional measured covariates
X = E + H %*% Gamma
delta = matrix(rnorm(q*1,mean=0,sd=1),q,1,byrow = TRUE)
#px1 matrix, creates beta with 1s in the first s entries and the remaining p-s as 0s
beta = matrix(rep(c(1,0),times = c(s,p-s)),p,1,byrow = TRUE)
#nx1 matrix with values of mean 0 and SD of sigma, error in Y independent of X
nu = matrix(rnorm(n*1,mean=0,sd=sigma),n,1,byrow = TRUE)
#eq. (1), the response of the Structural Equation Model
Y = X %*% beta + H %*% delta + nu
DDL(X,Y,idx)
DDL(X,Y,1)
result = DDL(X,Y,idx)
result = DDL(X,Y,1)
summary(result)
devtools::check()
source("~/Documents/GitHub/DDL/R/method.R")
devtools::check()
devtools::build()
library(DDL)
DDL(X,Y,1)
result = summary()
result = DDL(X,Y,1)
summary(result)
devtools::check()
devtools::check()
devtools::build_manual()
devtools::check()
devtools::build_manual()
devtools::check()
devtools::build_manual()
devtools::build()
result = DDL(X,Y,1)
summary(result)
library(DDL)
result = DDL(X,Y,1)
summary(result)
devtools::build()
library(DDL)
result = DDL(X,Y,1)
summary(result)
devtools::document()
